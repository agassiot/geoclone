[{"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\index.js":"1","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\reportWebVitals.js":"2","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\App.js":"3","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Signup.js":"4","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Playing.js":"5","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\ClickToPlay.js":"6","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Home.js":"7","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\SingleThought.js":"8","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Profile.js":"9","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Score.js":"10","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Login.js":"11","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Header\\index.js":"12","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Footer\\index.js":"13","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\mutations.js":"14","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\queries.js":"15","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\auth.js":"16","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\ThoughtList\\index.js":"17","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\CommentList\\index.js":"18","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\StreetView\\index.js":"19","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Questions\\index.js":"20","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\CommentForm\\index.js":"21","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Landing.js":"22","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\ThoughtForm\\index.js":"23"},{"size":500,"mtime":1668449107406,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1668449107408,"results":"26","hashOfConfig":"25"},{"size":2379,"mtime":1668519368800,"results":"27","hashOfConfig":"25"},{"size":4479,"mtime":1668520968434,"results":"28","hashOfConfig":"25"},{"size":2443,"mtime":1668521733121,"results":"29","hashOfConfig":"25"},{"size":528,"mtime":1668521028675,"results":"30","hashOfConfig":"25"},{"size":906,"mtime":1668519368804,"results":"31","hashOfConfig":"25"},{"size":1562,"mtime":1668449107408,"results":"32","hashOfConfig":"33"},{"size":1724,"mtime":1668449107407,"results":"34","hashOfConfig":"33"},{"size":595,"mtime":1668498582566,"results":"35","hashOfConfig":"25"},{"size":3276,"mtime":1668520927806,"results":"36","hashOfConfig":"25"},{"size":1322,"mtime":1668451107522,"results":"37","hashOfConfig":"33"},{"size":265,"mtime":1668517000458,"results":"38","hashOfConfig":"25"},{"size":1077,"mtime":1668449107409,"results":"39","hashOfConfig":"25"},{"size":1073,"mtime":1668449107410,"results":"40","hashOfConfig":"25"},{"size":1054,"mtime":1668449107409,"results":"41","hashOfConfig":"25"},{"size":1502,"mtime":1668449107405,"results":"42","hashOfConfig":"25"},{"size":953,"mtime":1668449107402,"results":"43","hashOfConfig":"33"},{"size":1924,"mtime":1668519368802,"results":"44","hashOfConfig":"25"},{"size":379,"mtime":1668458585069,"results":"45","hashOfConfig":"33"},{"size":2410,"mtime":1668449107402,"results":"46","hashOfConfig":"33"},{"size":2367,"mtime":1668521913946,"results":"47","hashOfConfig":"25"},{"size":3080,"mtime":1668519368802,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1uwt546",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"5cpucp",{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"51"},"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\index.js",[],["102","103"],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\reportWebVitals.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\App.js",["104"],"import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport ClickToPlay from \"./pages/ClickToPlay\";\nimport Playing from \"./pages/Playing\";\nimport Score from \"./pages/Score\";\nimport Landing from \"./pages/Landing\";\n// import SingleThought from \"./pages/SingleThought\";\n// import Profile from \"./pages/Profile\";\nimport Footer from \"./components/Footer\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<Landing />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/clicktoplay\" element={<ClickToPlay />} />\n              <Route path=\"/playing\" element={<Playing />} />\n              <Route path=\"/score\" element={<Score />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              {/* <Route path=\"/me\" element={<Profile />} /> */}\n              {/* <Route path=\"/profiles/:username\" element={<Profile />} /> */}\n              {/* <Route path=\"/thoughts/:thoughtId\" element={<SingleThought />} /> */}\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Signup.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Playing.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\ClickToPlay.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Home.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\SingleThought.js",[],["105","106"],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Profile.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Score.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Login.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\mutations.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\queries.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\auth.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\StreetView\\index.js",["107"],"import ReactStreetview from \"react-streetview\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_LOCATIONS } from \"../../utils/queries\";\nimport { useEffect, useState } from \"react\";\n\nconsole.log(process.env);\n// import * dotenv from 'dotenv'\n// dotenv.config()\n\nfunction StreetView({ rand }) {\n  const { loading, data } = useQuery(QUERY_LOCATIONS);\n  const [apiKey, setApiKey] = useState(\"\");\n  const locations = data?.locations || [];\n  useEffect(async () => {\n    const response = await fetch(\"/googleMapAPI\");\n    const apiKey = await response.json();\n    setApiKey(apiKey);\n  }, []);\n  //rand = Math.floor(Math.random() * 2);\n  if (loading) return <div>loading...</div>;\n  // see https://developers.google.com/maps/documentation/javascript\n  const googleMapsApiKey = apiKey;\n  //rand = 0;\n  let latitude = locations[rand].latitude;\n  console.log(latitude);\n  let longitude = locations[rand].longitude;\n  console.log(longitude);\n\n  //console.log(typeof(longitude))\n  //console.log(locations[rand].latitude)\n  // see https://developers.google.com/maps/documentation/javascript/3.exp/reference#StreetViewPanoramaOptions\n  const streetViewPanoramaOptions = {\n    position: { lat: latitude, lng: longitude },\n    pov: { heading: 100, pitch: 0 },\n    zoom: 1,\n  };\n\n  if (!apiKey) return null;\n\n  return (\n    <div\n      style={{\n        width: \"1200px\",\n        height: \"700px\",\n        backgroundColor: \"#eeeeee\",\n        position: \"relative\",\n      }}\n    >\n      <h4\n        style={{\n          top: \"0px\",\n          left: \"0px\",\n          height: \"75px\",\n          width: \"250px\",\n          position: \"absolute\",\n          backgroundColor: \"white\",\n          zIndex: \"2\",\n        }}\n      >\n        {\" \"}\n        Where are we?\n      </h4>\n      <ReactStreetview\n        apiKey={googleMapsApiKey}\n        streetViewPanoramaOptions={streetViewPanoramaOptions}\n      />\n    </div>\n  );\n}\n\nexport default StreetView;\n","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Questions\\index.js",[],["108","109"],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\CommentForm\\index.js",["110"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Landing.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\ThoughtForm\\index.js",["111"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":11,"column":8,"nodeType":"118","messageId":"119","endLine":11,"endColumn":12},{"ruleId":"112","replacedBy":"120"},{"ruleId":"114","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":14,"column":13,"nodeType":"124","endLine":18,"endColumn":4},{"ruleId":"112","replacedBy":"125"},{"ruleId":"114","replacedBy":"126"},{"ruleId":"116","severity":1,"message":"127","line":19,"column":15,"nodeType":"118","messageId":"119","endLine":19,"endColumn":19},{"ruleId":"116","severity":1,"message":"127","line":41,"column":15,"nodeType":"118","messageId":"119","endLine":41,"endColumn":19},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar",["128"],["129"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["128"],["129"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]

