[{"/Users/deltaix/repos/geoProject/client/src/index.js":"1","/Users/deltaix/repos/geoProject/client/src/reportWebVitals.js":"2","/Users/deltaix/repos/geoProject/client/src/App.js":"3","/Users/deltaix/repos/geoProject/client/src/pages/Home.js":"4","/Users/deltaix/repos/geoProject/client/src/pages/Login.js":"5","/Users/deltaix/repos/geoProject/client/src/pages/Signup.js":"6","/Users/deltaix/repos/geoProject/client/src/pages/Landing.js":"7","/Users/deltaix/repos/geoProject/client/src/pages/ClickToPlay.js":"8","/Users/deltaix/repos/geoProject/client/src/pages/Playing.js":"9","/Users/deltaix/repos/geoProject/client/src/pages/Score.js":"10","/Users/deltaix/repos/geoProject/client/src/components/Footer/index.js":"11","/Users/deltaix/repos/geoProject/client/src/utils/queries.js":"12","/Users/deltaix/repos/geoProject/client/src/utils/auth.js":"13","/Users/deltaix/repos/geoProject/client/src/utils/mutations.js":"14","/Users/deltaix/repos/geoProject/client/src/components/ThoughtList/index.js":"15","/Users/deltaix/repos/geoProject/client/src/components/StreetView/index.js":"16"},{"size":500,"mtime":1668446356812,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1668446356813,"results":"19","hashOfConfig":"18"},{"size":2381,"mtime":1668529933548,"results":"20","hashOfConfig":"18"},{"size":836,"mtime":1668524600280,"results":"21","hashOfConfig":"18"},{"size":3276,"mtime":1668524600280,"results":"22","hashOfConfig":"18"},{"size":4479,"mtime":1668524600281,"results":"23","hashOfConfig":"18"},{"size":2368,"mtime":1668524600280,"results":"24","hashOfConfig":"18"},{"size":528,"mtime":1668524600280,"results":"25","hashOfConfig":"18"},{"size":2544,"mtime":1668526750725,"results":"26","hashOfConfig":"18"},{"size":595,"mtime":1668524600281,"results":"27","hashOfConfig":"18"},{"size":316,"mtime":1668526823019,"results":"28","hashOfConfig":"18"},{"size":1073,"mtime":1668446356813,"results":"29","hashOfConfig":"18"},{"size":1054,"mtime":1668446356813,"results":"30","hashOfConfig":"18"},{"size":1077,"mtime":1668446356813,"results":"31","hashOfConfig":"18"},{"size":1502,"mtime":1668446356812,"results":"32","hashOfConfig":"18"},{"size":1987,"mtime":1668526946167,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"xau14b",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},"/Users/deltaix/repos/geoProject/client/src/index.js",[],["68","69"],"/Users/deltaix/repos/geoProject/client/src/reportWebVitals.js",[],"/Users/deltaix/repos/geoProject/client/src/App.js",["70"],"/Users/deltaix/repos/geoProject/client/src/pages/Home.js",[],"/Users/deltaix/repos/geoProject/client/src/pages/Login.js",[],"/Users/deltaix/repos/geoProject/client/src/pages/Signup.js",[],"/Users/deltaix/repos/geoProject/client/src/pages/Landing.js",[],"/Users/deltaix/repos/geoProject/client/src/pages/ClickToPlay.js",[],"/Users/deltaix/repos/geoProject/client/src/pages/Playing.js",[],"/Users/deltaix/repos/geoProject/client/src/pages/Score.js",[],"/Users/deltaix/repos/geoProject/client/src/components/Footer/index.js",[],"/Users/deltaix/repos/geoProject/client/src/utils/queries.js",[],"/Users/deltaix/repos/geoProject/client/src/utils/auth.js",[],"/Users/deltaix/repos/geoProject/client/src/utils/mutations.js",[],"/Users/deltaix/repos/geoProject/client/src/components/ThoughtList/index.js",[],"/Users/deltaix/repos/geoProject/client/src/components/StreetView/index.js",["71"],"import ReactStreetview from \"react-streetview\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_LOCATIONS } from \"../../utils/queries\";\nimport { useEffect, useState } from \"react\";\n\nconsole.log(process.env);\n// import * dotenv from 'dotenv'\n// dotenv.config()\n\nfunction StreetView({ rand }) {\n  const { loading, data } = useQuery(QUERY_LOCATIONS);\n  const [apiKey, setApiKey] = useState(\"\");\n  const locations = data?.locations || [];\n  useEffect(async () => {\n    const response = await fetch(\"/googleMapAPI\");\n    const apiKey = await response.json();\n    setApiKey(apiKey);\n  }, []);\n  //rand = Math.floor(Math.random() * 2);\n  if (loading) return <div>loading...</div>;\n  // see https://developers.google.com/maps/documentation/javascript\n  const googleMapsApiKey = apiKey;\n  //rand = 0;\n  let latitude = locations[rand].latitude;\n  console.log(latitude);\n  let longitude = locations[rand].longitude;\n  console.log(longitude);\n\n\n\n  // see https://developers.google.com/maps/documentation/javascript/3.exp/reference#StreetViewPanoramaOptions\n  const streetViewPanoramaOptions = {\n    position: { lat: latitude, lng:  longitude },\n    pov: { heading: 100, pitch: 0 },\n    zoom: 1,\n  };\n\n  if (!apiKey) return null;\n\n  return (\n    <center>\n    <div\n    style={{\n      background: \"\",\n      width: \"100vh\",\n      marginTop: \"10rem\",\n      marginLeft: \"20rem\",\n      height: \"700px\",\n      backgroundColor: \"#eeeeee\",\n        position: \"relative\",\n      }}\n    >\n      <h4\n        style={{\n          margin: \"10rem\",\n          justifySelf: \"right\",\n          top: \"0px\",\n          left: \"0px\",\n          height: \"75px\",\n          width: \"250px\",\n          position: \"absolute\",\n          backgroundColor: \"white\",\n          zIndex: \"2\",\n        }}\n      >\n        {\" \"}\n      \n      </h4>\n      <ReactStreetview\n        apiKey={googleMapsApiKey}\n        streetViewPanoramaOptions={streetViewPanoramaOptions}\n      />\n    </div>\n    </center>\n  );\n}\n\nexport default StreetView;\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":11,"column":8,"nodeType":"78","messageId":"79","endLine":11,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":14,"column":13,"nodeType":"82","endLine":18,"endColumn":4},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]