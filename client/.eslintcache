[{"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\index.js":"1","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\App.js":"2","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\reportWebVitals.js":"3","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\Signup.js":"4","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\Login.js":"5","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\ClickToPlay.js":"6","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\Profile.js":"7","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\Score.js":"8","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\SingleThought.js":"9","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\Home.js":"10","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\Playing.js":"11","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\Footer\\index.js":"12","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\Header\\index.js":"13","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\utils\\mutations.js":"14","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\utils\\auth.js":"15","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\utils\\queries.js":"16","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\ThoughtList\\index.js":"17","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\ThoughtForm\\index.js":"18","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\CommentForm\\index.js":"19","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\CommentList\\index.js":"20","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\Questions\\index.js":"21","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\StreetView\\index.js":"22"},{"size":517,"mtime":1668022624962,"results":"23","hashOfConfig":"24"},{"size":2442,"mtime":1668183839651,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1668022624966,"results":"26","hashOfConfig":"24"},{"size":2772,"mtime":1668105347274,"results":"27","hashOfConfig":"24"},{"size":2571,"mtime":1668105347266,"results":"28","hashOfConfig":"24"},{"size":287,"mtime":1668105347258,"results":"29","hashOfConfig":"24"},{"size":1790,"mtime":1668022624964,"results":"30","hashOfConfig":"24"},{"size":189,"mtime":1668105347271,"results":"31","hashOfConfig":"24"},{"size":1620,"mtime":1668022624965,"results":"32","hashOfConfig":"24"},{"size":944,"mtime":1668183839661,"results":"33","hashOfConfig":"24"},{"size":2076,"mtime":1668489806686,"results":"34","hashOfConfig":"24"},{"size":601,"mtime":1668457241641,"results":"35","hashOfConfig":"24"},{"size":1368,"mtime":1668105347254,"results":"36","hashOfConfig":"24"},{"size":1133,"mtime":1668184127010,"results":"37","hashOfConfig":"24"},{"size":1095,"mtime":1668105347275,"results":"38","hashOfConfig":"24"},{"size":1151,"mtime":1668485864357,"results":"39","hashOfConfig":"24"},{"size":1556,"mtime":1668022624961,"results":"40","hashOfConfig":"24"},{"size":3193,"mtime":1668022624961,"results":"41","hashOfConfig":"24"},{"size":2498,"mtime":1668184127004,"results":"42","hashOfConfig":"24"},{"size":989,"mtime":1668184127007,"results":"43","hashOfConfig":"24"},{"size":2360,"mtime":1668486843390,"results":"44","hashOfConfig":"24"},{"size":1999,"mtime":1668487312220,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"dp6rb9",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\index.js",[],["96","97"],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\App.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\reportWebVitals.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\Signup.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\Login.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\ClickToPlay.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\Profile.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\Score.js",["98"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Scores = () => {\r\n    return (\r\n        <main>\r\n        \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Scores;\r\n","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\Home.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\pages\\Playing.js",["99"],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\utils\\mutations.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\utils\\auth.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\utils\\queries.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\ThoughtForm\\index.js",["100"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_THOUGHT } from '../../utils/mutations';\r\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst ThoughtForm = () => {\r\n  const [thoughtText, setThoughtText] = useState('');\r\n\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\r\n    update(cache, { data: { addThought } }) {\r\n      try {\r\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_THOUGHTS,\r\n          data: { thoughts: [addThought, ...thoughts] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      // update me object's cache\r\n      const { me } = cache.readQuery({ query: QUERY_ME });\r\n      cache.writeQuery({\r\n        query: QUERY_ME,\r\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addThought({\r\n        variables: {\r\n          thoughtText,\r\n          thoughtAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setThoughtText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'thoughtText' && value.length <= 280) {\r\n      setThoughtText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>What's on your techy mind?</h3>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"thoughtText\"\r\n                placeholder=\"Here's a new thought...\"\r\n                value={thoughtText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Thought\r\n              </button>\r\n            </div>\r\n            {error && (\r\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to share your thoughts. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThoughtForm;\r\n","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\CommentForm\\index.js",["101"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_COMMENT } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst CommentForm = ({ thoughtId }) => {\r\n  const [commentText, setCommentText] = useState('');\r\n  const [characterCount, setCharacterCount] = useState(0);\r\n\r\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await addComment({\r\n        variables: {\r\n          thoughtId,\r\n          commentText,\r\n          commentAuthor: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setCommentText('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'commentText' && value.length <= 280) {\r\n      setCommentText(value);\r\n      setCharacterCount(value.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4>What are your thoughts on this thought?</h4>\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <p\r\n            className={`m-0 ${\r\n              characterCount === 280 || error ? 'text-danger' : ''\r\n            }`}\r\n          >\r\n            Character Count: {characterCount}/280\r\n            {error && <span className=\"ml-2\">{error.message}</span>}\r\n          </p>\r\n          <form\r\n            className=\"flex-row justify-center justify-space-between-md align-center\"\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <div className=\"col-12 col-lg-9\">\r\n              <textarea\r\n                name=\"commentText\"\r\n                placeholder=\"Add your comment...\"\r\n                value={commentText}\r\n                className=\"form-input w-100\"\r\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                onChange={handleChange}\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-3\">\r\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                Add Comment\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in to share your thoughts. Please{' '}\r\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\Questions\\index.js",["102"],"const questionBank = [\r\n    {\r\n    \"locationName\": \"New York\",\r\n    \"latitude\": 40.689247,\r\n    \"longitude\": -74.044502,\r\n    \"answerChoice\": [\r\n      \"Arlington\",\r\n      \"Pheonix\",\r\n      \"New York\",\r\n      \"Philidelphia\"\r\n    ]\r\n    },\r\n   {\r\n    \"locationName\": \"Dallas\",\r\n    \"latitude\": 32.7796676,\r\n    \"longitude\": -96.8022648,\r\n    \"answerChoice\": [\r\n      \"Atlanta\",\r\n      \"Dallas\",\r\n      \"Los Angeles\",\r\n      \"Seattle\"\r\n    ]\r\n    \r\n   },\r\n   {\r\n    \"locationName\": \"Jordan\",\r\n    \"latitude\": 30.3290344,\r\n    \"longitude\": 35.44435592,\r\n    \"answerChoice\": [\r\n      \"Egypt\",\r\n      \"Israel\",\r\n      \"Jordan\",\r\n      \"Iraq\"\r\n    ]\r\n    },\r\n     {\r\n      \"locationName\": \"mexico\",\r\n      \"latitude\": 32.7796676,\r\n      \"longitude\": -96.8022648,\r\n      \"answerChoice\": [\r\n        \"louisiana\",\r\n        \"florida\",\r\n        \"alabama\",\r\n        \"mexico\"\r\n      ]\r\n      \r\n     },\r\n     {\r\n      \"locationName\": \"mansfield\",\r\n      \"latitude\": 32.7796676,\r\n      \"longitude\": -96.8022648,\r\n      \"answerChoice\": [\r\n        \"lakview\",\r\n        \"mansfield\",\r\n        \"elgacy\",\r\n        \"donn kirk\"\r\n      ]\r\n      \r\n     },\r\n     {\r\n      \"locationName\": \"ft worth\",\r\n      \"latitude\": 32.7796676,\r\n      \"longitude\": -96.8022648,\r\n      \"answerChoice\": [\r\n        \"ft worth\",\r\n        \"gp\",\r\n        \"grapevine\",\r\n        \"seagoville\"\r\n      ]\r\n      \r\n     },\r\n     {\r\n      \"locationName\": \"shgoogahtle\",\r\n      \"latitude\": 32.7796676,\r\n      \"longitude\": -96.8022648,\r\n      \"answerChoice\": [\r\n        \"dougha\",\r\n        \"pougalas\",\r\n        \"lougageles\",\r\n        \"shgoogahtle\"\r\n      ]\r\n      \r\n     },\r\n     {\r\n      \"locationName\": \"arlington\",\r\n      \"latitude\": 32.7796676,\r\n      \"longitude\": -96.8022648,\r\n      \"answerChoice\": [\r\n        \"Atl\",\r\n        \"arlington\",\r\n        \"Los An\",\r\n        \"Se\"\r\n      ]\r\n      \r\n     }\r\n\r\n]\r\n\r\nexport default (n = 5) =>\r\n  Promise.resolve(questionBank.sort(() => 0.5 - Math.random()).slice(0, n));\r\n\r\n\r\n\r\n\r\n// import { QUERY_LOCATIONS } from \"../../utils/queries\";\r\n\r\n// console.log(process.env);\r\n\r\n// const Questions = () => {\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <p>Multiple Choice List</p>\r\n//         <ul>\r\n//           <li>1{QUERY_LOCATIONS.JSON.parse(locations[0].answerChoice)}</li>\r\n//         </ul>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Questions;\r\n","C:\\Users\\marco\\Documents\\repos\\notgeoguessr\\github-cd\\client\\src\\components\\StreetView\\index.js",["103"],"import ReactStreetview from \"react-streetview\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_LOCATIONS } from \"../../utils/queries\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconsole.log(process.env);\r\n// import * dotenv from 'dotenv'\r\n// dotenv.config()\r\n\r\nfunction StreetView({ rand }) {\r\n  const { loading, data } = useQuery(QUERY_LOCATIONS);\r\n  const [apiKey, setApiKey] = useState(\"\");\r\n  const locations = data?.locations || [];\r\n  useEffect(async () => {\r\n    const response = await fetch(\"/googleMapAPI\");\r\n\r\n    const apiKey = await response.json();\r\n\r\n    setApiKey(apiKey);\r\n  }, []);\r\n  //rand = Math.floor(Math.random() * 2);\r\n  if (loading) return <div>loading...</div>;\r\n  // see https://developers.google.com/maps/documentation/javascript\r\n  const googleMapsApiKey = apiKey;\r\n  //rand = 0;\r\n  let latitude = locations[rand].latitude;\r\n  console.log(latitude);\r\n  let longitude = locations[rand].longitude;\r\n  console.log(longitude);\r\n\r\n  //console.log(typeof(longitude))\r\n  //console.log(locations[rand].latitude)\r\n  // see https://developers.google.com/maps/documentation/javascript/3.exp/reference#StreetViewPanoramaOptions\r\n  const streetViewPanoramaOptions = {\r\n    position: { lat: latitude, lng: longitude },\r\n    pov: { heading: 100, pitch: 0 },\r\n    zoom: 1,\r\n  };\r\n\r\n  if (!apiKey) return null;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"1200px\",\r\n        height: \"700px\",\r\n        backgroundColor: \"#eeeeee\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <h4\r\n        style={{\r\n          top: \"0px\",\r\n          left: \"0px\",\r\n          height: \"75px\",\r\n          width: \"250px\",\r\n          position: \"absolute\",\r\n          backgroundColor: \"white\",\r\n          zIndex: \"2\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        Where are we?\r\n      </h4>\r\n      <ReactStreetview\r\n        apiKey={googleMapsApiKey}\r\n        streetViewPanoramaOptions={streetViewPanoramaOptions}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StreetView;\r\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"112","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":17},{"ruleId":"108","severity":1,"message":"113","line":41,"column":15,"nodeType":"110","messageId":"111","endLine":41,"endColumn":19},{"ruleId":"108","severity":1,"message":"113","line":19,"column":15,"nodeType":"110","messageId":"111","endLine":19,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":99,"column":1,"nodeType":"116","endLine":100,"endColumn":77},{"ruleId":"117","severity":1,"message":"118","line":14,"column":13,"nodeType":"119","endLine":20,"endColumn":4},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Questions' is defined but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]