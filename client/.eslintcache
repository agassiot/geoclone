<<<<<<< HEAD
[{"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\index.js":"1","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\reportWebVitals.js":"2","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\App.js":"3","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Score.js":"4","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\ClickToPlay.js":"5","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Home.js":"6","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Playing.js":"7","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Login.js":"8","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\SingleThought.js":"9","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Profile.js":"10","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Signup.js":"11","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Header\\index.js":"12","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Footer\\index.js":"13","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\mutations.js":"14","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\queries.js":"15","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\auth.js":"16","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\ThoughtList\\index.js":"17","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\ThoughtForm\\index.js":"18","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Questions\\index.js":"19","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\CommentList\\index.js":"20","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\CommentForm\\index.js":"21","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\StreetView\\index.js":"22"},{"size":500,"mtime":1668449107406,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1668449107408,"results":"25","hashOfConfig":"24"},{"size":2370,"mtime":1668449107401,"results":"26","hashOfConfig":"24"},{"size":177,"mtime":1668449107408,"results":"27","hashOfConfig":"24"},{"size":273,"mtime":1668449107406,"results":"28","hashOfConfig":"24"},{"size":907,"mtime":1668449107406,"results":"29","hashOfConfig":"24"},{"size":875,"mtime":1668457917416,"results":"30","hashOfConfig":"24"},{"size":2478,"mtime":1668449107407,"results":"31","hashOfConfig":"24"},{"size":1562,"mtime":1668449107408,"results":"32","hashOfConfig":"24"},{"size":1724,"mtime":1668449107407,"results":"33","hashOfConfig":"24"},{"size":2672,"mtime":1668449107408,"results":"34","hashOfConfig":"24"},{"size":1322,"mtime":1668451107522,"results":"35","hashOfConfig":"24"},{"size":577,"mtime":1668449107402,"results":"36","hashOfConfig":"24"},{"size":1077,"mtime":1668449107409,"results":"37","hashOfConfig":"24"},{"size":1073,"mtime":1668449107410,"results":"38","hashOfConfig":"24"},{"size":1054,"mtime":1668449107409,"results":"39","hashOfConfig":"24"},{"size":1502,"mtime":1668449107405,"results":"40","hashOfConfig":"24"},{"size":3080,"mtime":1668449107404,"results":"41","hashOfConfig":"24"},{"size":350,"mtime":1668457917414,"results":"42","hashOfConfig":"24"},{"size":953,"mtime":1668449107402,"results":"43","hashOfConfig":"24"},{"size":2410,"mtime":1668449107402,"results":"44","hashOfConfig":"24"},{"size":1689,"mtime":1668458466150,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5cpucp",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\reportWebVitals.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\App.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Score.js",["95"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Scores = () => {\n    return (\n        <main>\n        \n        </main>\n    )\n}\n\nexport default Scores;\n","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\ClickToPlay.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Home.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Playing.js",["96"],"import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { QUERY_LOCATIONS } from \"../utils/queries\";\nimport StreetView from \"../components/StreetView\";\nimport Questions from \"../components/Questions\";\n\n\n\nconst Playing = () => {\n  const { loading, data } = useQuery(QUERY_LOCATIONS);\n  const locations= data?.locations|| [];\n  console.log(locations)\n  if (loading) return (<div>loading...</div>)\n console.log(locations)\n let rand = Math.floor(Math.random() * 3);\n\n\n  return (\n    <main>\n      {/* Rendering Street View */}\n      <StreetView rand={rand}/>\n      {/* <Questions></Questions> */}\n      {/* Render multiple choices down below */}\n      <h3>Multiple Choice: What city are you in?</h3>\n      <ul>\n        {locations[rand].answerChoice.map(choices =>(<li key={choices} >{choices}</li>))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Playing;\n","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Login.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Profile.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Signup.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\mutations.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\queries.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\auth.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\ThoughtForm\\index.js",["97"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Questions\\index.js",["98"],"import { QUERY_LOCATIONS } from \"../../utils/queries\";\n\nconsole.log(process.env);\n\nconst Questions = () => {\n   return (\n\n    <>\n    <div>\n        <p>Multiple Choice List</p>\n        <ul>\n            <li>1{QUERY_LOCATIONS.JSON.parse(locations[0].answerChoice)}</li>\n        </ul>\n\n    </div>\n    </>\n\n\n\n   )\n      \n  };\n  \n  export default Questions;","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\CommentForm\\index.js",["99"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\StreetView\\index.js",[],{"ruleId":"100","severity":1,"message":"101","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},{"ruleId":"100","severity":1,"message":"104","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":17},{"ruleId":"100","severity":1,"message":"105","line":41,"column":15,"nodeType":"102","messageId":"103","endLine":41,"endColumn":19},{"ruleId":"106","severity":2,"message":"107","line":12,"column":46,"nodeType":"102","messageId":"108","endLine":12,"endColumn":55},{"ruleId":"100","severity":1,"message":"105","line":19,"column":15,"nodeType":"102","messageId":"103","endLine":19,"endColumn":19},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Questions' is defined but never used.","'data' is assigned a value but never used.","no-undef","'locations' is not defined.","undef"]
=======
[{"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\index.js":"1","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\App.js":"2","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\reportWebVitals.js":"3","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\SingleThought.js":"4","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Signup.js":"5","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Playing.js":"6","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Login.js":"7","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Profile.js":"8","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Home.js":"9","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\ClickToPlay.js":"10","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Score.js":"11","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Header\\index.js":"12","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Footer\\index.js":"13","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\mutations.js":"14","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\auth.js":"15","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\queries.js":"16","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\CommentList\\index.js":"17","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\StreetView\\index.js":"18","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\CommentForm\\index.js":"19","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Questions\\index.js":"20","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\ThoughtList\\index.js":"21","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\ThoughtForm\\index.js":"22"},{"size":500,"mtime":1668449107406,"results":"23","hashOfConfig":"24"},{"size":2370,"mtime":1668449107401,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1668449107408,"results":"26","hashOfConfig":"24"},{"size":1562,"mtime":1668449107408,"results":"27","hashOfConfig":"24"},{"size":2672,"mtime":1668449107408,"results":"28","hashOfConfig":"24"},{"size":1622,"mtime":1668457000351,"results":"29","hashOfConfig":"24"},{"size":2478,"mtime":1668449107407,"results":"30","hashOfConfig":"24"},{"size":1724,"mtime":1668449107407,"results":"31","hashOfConfig":"24"},{"size":907,"mtime":1668449107406,"results":"32","hashOfConfig":"24"},{"size":273,"mtime":1668449107406,"results":"33","hashOfConfig":"24"},{"size":177,"mtime":1668449107408,"results":"34","hashOfConfig":"24"},{"size":1322,"mtime":1668451107522,"results":"35","hashOfConfig":"24"},{"size":577,"mtime":1668449107402,"results":"36","hashOfConfig":"24"},{"size":1077,"mtime":1668449107409,"results":"37","hashOfConfig":"24"},{"size":1054,"mtime":1668449107409,"results":"38","hashOfConfig":"24"},{"size":1073,"mtime":1668449107410,"results":"39","hashOfConfig":"24"},{"size":953,"mtime":1668449107402,"results":"40","hashOfConfig":"24"},{"size":1926,"mtime":1668454680004,"results":"41","hashOfConfig":"24"},{"size":2410,"mtime":1668449107402,"results":"42","hashOfConfig":"24"},{"size":379,"mtime":1668454179205,"results":"43","hashOfConfig":"24"},{"size":1502,"mtime":1668449107405,"results":"44","hashOfConfig":"24"},{"size":3080,"mtime":1668449107404,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"5cpucp",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\index.js",[],["96","97"],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\App.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\reportWebVitals.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Signup.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Playing.js",["98"],"import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { QUERY_LOCATIONS } from \"../utils/queries\";\nimport StreetView from \"../components/StreetView\";\nimport Questions from \"../components/Questions\";\n\nconst Playing = () => {\n  const { loading, data } = useQuery(QUERY_LOCATIONS);\n  const locations = data?.locations || [];\n  console.log(locations);\n  if (loading) return <div>loading...</div>;\n  console.log(locations);\n  let rand = Math.floor(Math.random() * 3);\n\n  // const locationButton = document.querySelectorAll(\"li\");\n  // locationButton.forEach((item) =>\n  //   item.addEventListener(\"click\", function (event) {\n  //     if (event.target.matches(\"li\")) {\n  //       questionValidation(event);\n  //     }\n  //   })\n  // );\n\n  return (\n    <main>\n      {/* Rendering Street View */}\n      <StreetView rand={rand} />\n      {/* <Questions></Questions> */}\n      {/* Render multiple choices down below */}\n      <h3>Multiple Choice: What city are you in?</h3>\n      <ul>\n        {locations[rand].answerChoice.map((choice) => (\n          <li\n            key={choice}\n            className=\"btn\"\n            onClick={(event) => questionValidation(choice)}\n          >\n            {choice}\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n\n  function questionValidation(choice) {\n    console.log(choice);\n    // console.log(locations.locationName);\n    console.log(locations[rand]);\n    if (choice === locations[rand].locationName)\n      console.log(\"You are correct!\");\n    else {\n      console.log(\"You are Wrong!\");\n    }\n    // window.location.reload();\n  }\n};\n\nexport default Playing;\n","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Login.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Profile.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Home.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\ClickToPlay.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\pages\\Score.js",["99"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Scores = () => {\n    return (\n        <main>\n        \n        </main>\n    )\n}\n\nexport default Scores;\n","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\mutations.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\auth.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\utils\\queries.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\StreetView\\index.js",["100"],"import ReactStreetview from \"react-streetview\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_LOCATIONS } from \"../../utils/queries\";\nimport { useEffect, useState } from \"react\";\n\nconsole.log(process.env);\n// import * dotenv from 'dotenv'\n// dotenv.config()\n\nfunction StreetView({ rand }) {\n  const { loading, data } = useQuery(QUERY_LOCATIONS);\n  const [apiKey, setApiKey] = useState(\"\");\n  const locations = data?.locations || [];\n  useEffect(async () => {\n    const response = await fetch(\"/googleMapAPI\");\n\n    const apiKey = await response.json();\n\n    setApiKey(apiKey);\n  }, []);\n  //rand = Math.floor(Math.random() * 2);\n  if (loading) return <div>loading...</div>;\n  // see https://developers.google.com/maps/documentation/javascript\n  const googleMapsApiKey = apiKey;\n  //rand = 0;\n  let latitude = locations[rand].latitude;\n  console.log(latitude);\n  let longitude = locations[rand].longitude;\n  console.log(longitude);\n\n  //console.log(typeof(longitude))\n  //console.log(locations[rand].latitude)\n  // see https://developers.google.com/maps/documentation/javascript/3.exp/reference#StreetViewPanoramaOptions\n  const streetViewPanoramaOptions = {\n    position: { lat: latitude, lng: longitude },\n    pov: { heading: 100, pitch: 0 },\n    zoom: 1,\n  };\n\n  if (!apiKey) return null;\n\n  return (\n    <div\n      style={{\n        width: \"1200px\",\n        height: \"700px\",\n        backgroundColor: \"#eeeeee\",\n        position: \"relative\",\n      }}\n    >\n      <h4\n        style={{\n          top: \"0px\",\n          left: \"0px\",\n          height: \"75px\",\n          width: \"250px\",\n          position: \"absolute\",\n          backgroundColor: \"white\",\n          zIndex: \"2\",\n        }}\n      >\n        {\" \"}\n        Where are we?\n      </h4>\n      <ReactStreetview\n        apiKey={googleMapsApiKey}\n        streetViewPanoramaOptions={streetViewPanoramaOptions}\n      />\n    </div>\n  );\n}\n\nexport default StreetView;\n","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\CommentForm\\index.js",["101"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\Questions\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\14693\\repos\\project 3\\github-cd\\client\\src\\components\\ThoughtForm\\index.js",["102"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What's on your techy mind?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":17},{"ruleId":"107","severity":1,"message":"111","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":14,"column":13,"nodeType":"114","endLine":20,"endColumn":4},{"ruleId":"107","severity":1,"message":"115","line":19,"column":15,"nodeType":"109","messageId":"110","endLine":19,"endColumn":19},{"ruleId":"107","severity":1,"message":"115","line":41,"column":15,"nodeType":"109","messageId":"110","endLine":41,"endColumn":19},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Questions' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> fb0bfb2cbdeeab68b172acdab4f331d876dd6546
